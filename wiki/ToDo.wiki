#summary Itinerary of tasks and improvements.

= To Do =

 * Parse PDDL files
    * Use STRIPS subset like [http://eecs.oregonstate.edu/ipc-learn/documents/strips-pddl-subset.pdf this] or [http://users.cecs.anu.edu.au/~patrik/pddlman/writing.html this]
       * Support requirements `strips`, `equality`, and maybe `typing`
    * Implement in separate project from demo as standalone library
    * Borrow flex/bison files from [http://planning.cis.strath.ac.uk/VAL/ VAL]?
 * Benchmarking app
    * Separate from demo?
    * Possible: generate random planning problems? [http://www.loria.fr/~hoffmanj/ff-domains.html Like so]
    * Plans-per-second metric?
       * Threaded?
 * Predicates
    * Support flexible, user-defined predicates
    * Retain basic, high-performance ones as well
    * Support logical expressions in effects and preconditions
 * How to get values for predicates?
    * Possible: ask the domain
    * If we have a set of objects like in PDDL, we could brute-force over objects

= Roadmap =

 * *_Pre-alpha_*:
    * Not yet at alpha status.
 * _Alpha_:
    * Support domain-defined predicates
    * Find a better solution for getting Action parameters
    * Complete unit tests
 * _Beta_:
    * PDDL module
    * Demo for interacting with the planner
    * Some form of benchmarking?
 * _Release_:
    * Bug-free and stable as possible